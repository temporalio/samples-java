// Run 'gradle checkUpdates' to find out which dependencies have newer versions

plugins {
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'com.github.sherter.google-java-format' version '0.9'
    id "net.ltgt.errorprone" version "2.0.2"
    id 'name.remal.check-updates' version '1.5.0'
}

apply plugin: 'java'
apply plugin: 'com.github.sherter.google-java-format'

googleJavaFormat {
    toolVersion '1.7'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    mavenCentral()
}

dependencies {
    implementation group: 'io.temporal', name: 'temporal-sdk', version: '1.5.0'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.7'
    implementation group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
    implementation group: 'io.cloudevents', name: 'cloudevents-core', version: '2.2.0'
    implementation group: 'io.cloudevents', name: 'cloudevents-api', version: '2.2.0'
    implementation group: 'io.cloudevents', name: 'cloudevents-json-jackson', version: '2.2.0'
    implementation group: 'io.serverlessworkflow', name: 'serverlessworkflow-api', version: '3.0.0.Final'
    implementation group: 'io.serverlessworkflow', name: 'serverlessworkflow-validation', version: '3.0.0.Final'
    implementation group: 'io.serverlessworkflow', name: 'serverlessworkflow-spi', version: '3.0.0.Final'
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.6.0'

    testImplementation group: 'io.temporal', name: 'temporal-testing', version: '1.5.0'
    testImplementation group: 'io.temporal', name: 'temporal-testing-junit4', version: '1.5.0'
    testImplementation group: 'io.temporal', name: 'temporal-testing-junit5', version: '1.5.0'
    
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.1.0'
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0-SNAPSHOT'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0-SNAPSHOT'
    testCompileOnly 'junit:junit:4.13.2'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.9.0-SNAPSHOT'

    errorproneJavac("com.google.errorprone:javac:9+181-r4173-1")
    errorprone("com.google.errorprone:error_prone_core:2.10.0")
}

compileJava {
    dependsOn 'googleJavaFormat'
}

test {
    useJUnitPlatform()
}

task execute(type: JavaExec) {
    main = findProperty("mainClass") ?: ""
    classpath = sourceSets.main.runtimeClasspath
}

license {
    header rootProject.file('license-header.txt')
    exclude '**/*.json'
    exclude '**/*.yml'
}

// Executes most of the hello workflows as a sanity check
task runHello {
    doLast {
        // Cron and Periodic are not in the list as they take long time to stop
        ["io.temporal.samples.hello.HelloActivity",
         "io.temporal.samples.hello.HelloActivityExclusiveChoice",
         "io.temporal.samples.hello.HelloActivityRetry",
         "io.temporal.samples.hello.HelloAsync",
         "io.temporal.samples.hello.HelloAsyncActivityCompletion",
         "io.temporal.samples.hello.HelloAsyncLambda",
         "io.temporal.samples.hello.HelloChild",
         "io.temporal.samples.hello.HelloException",
         "io.temporal.samples.hello.HelloPolymorphicActivity",
         "io.temporal.samples.hello.HelloQuery",
         "io.temporal.samples.hello.HelloSaga",
         "io.temporal.samples.hello.HelloSearchAttributes",
         "io.temporal.samples.hello.HelloSignal"
        ].each { mainClass ->
            println mainClass
            javaexec {
                classpath = sourceSets.main.runtimeClasspath
                main = mainClass
            }
        }
    }
}
