// Run 'gradle checkUpdates' to find out which dependencies have newer versions

plugins {
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'com.github.sherter.google-java-format' version '0.9'
    id "net.ltgt.errorprone" version "2.0.2"
}

apply plugin: 'java'
apply plugin: 'com.github.sherter.google-java-format'

googleJavaFormat {
    toolVersion '1.7'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    mavenCentral()
}

dependencies {
    implementation(platform("com.fasterxml.jackson:jackson-bom:2.13.1"))

    implementation group: 'io.temporal', name: 'temporal-sdk', version: '1.8.0'
    implementation group: 'io.temporal', name: 'temporal-opentracing', version: '1.8.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.10'
    implementation group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
    implementation group: 'io.cloudevents', name: 'cloudevents-core', version: '2.3.0'
    implementation group: 'io.cloudevents', name: 'cloudevents-api', version: '2.3.0'
    implementation group: 'io.cloudevents', name: 'cloudevents-json-jackson', version: '2.3.0'
    implementation group: 'io.serverlessworkflow', name: 'serverlessworkflow-api', version: '4.0.2.Final'
    implementation group: 'io.serverlessworkflow', name: 'serverlessworkflow-validation', version: '4.0.2.Final'
    implementation group: 'io.serverlessworkflow', name: 'serverlessworkflow-spi', version: '4.0.2.Final'
    implementation group: 'io.serverlessworkflow', name: 'serverlessworkflow-util', version: '4.0.2.Final'
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.7.0'
    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.8.2'
    implementation group: 'net.thisptr', name: 'jackson-jq', version: '1.0.0-preview.20210928'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.5'
    implementation 'io.jaegertracing:jaeger-client:1.8.0'

    implementation(platform("io.opentelemetry:opentelemetry-bom:1.11.0"))

    implementation 'io.opentelemetry:opentelemetry-sdk'
    implementation 'io.opentelemetry:opentelemetry-exporter-jaeger'
    implementation 'io.opentelemetry:opentelemetry-extension-trace-propagators'
    implementation 'io.opentelemetry:opentelemetry-opentracing-shim:1.12.0-alpha-SNAPSHOT'
    implementation 'io.opentelemetry:opentelemetry-semconv:1.11.0-alpha'

    testImplementation("io.temporal:temporal-testing:1.8.0")
    testImplementation ("io.temporal:temporal-testing") {
        capabilities {
            requireCapability("io.temporal:temporal-testing-junit4")
        }
    }
    testImplementation ("io.temporal:temporal-testing") {
        capabilities {
            requireCapability("io.temporal:temporal-testing-junit5")
        }
    }

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.3.1'
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0-SNAPSHOT'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0-SNAPSHOT'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.9.0-SNAPSHOT'

    errorproneJavac("com.google.errorprone:javac:9+181-r4173-1")
    errorprone("com.google.errorprone:error_prone_core:2.10.0")
}

compileJava {
    dependsOn 'googleJavaFormat'
}

test {
    useJUnitPlatform()
}

license {
    header rootProject.file('license-header.txt')
    exclude '**/*.json'
    exclude '**/*.yml'
}
