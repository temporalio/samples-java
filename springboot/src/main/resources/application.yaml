server:
  port: 3030
spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: temporal-samples
  # temporal specific configs
  temporal:
    namespace: default
    connection:
      target: 127.0.0.1:7233
# (Note following configuration are not set by default but serve more as reference)
#    workers:
#      - task-queue: DemoTaskQueue
#        capacity:
#          max-concurrent-workflow-task-pollers: 6
#          max-concurrent-activity-task-pollers: 6
#        rate-limits:
#          max-worker-activities-per-second: 3
#          max-task-queue-activities-per-second: 3
#    workflow-cache:
#      max-instances: 10
#      max-threads: 10
    workersAutoDiscovery:
      packages: io.temporal.samples.springboot
  # data source config for some samples that need it
  datasource:
    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;
    username: sa
    password: pass
    driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    defer-datasource-initialization: true
  ## enable h2 console (h2-console endpoint) for debugging
  h2:
    console:
      enabled: true
  ## kafka setup for samples
  kafka:
    consumer:
      auto-offset-reset: earliest
    bootstrap-servers: localhost:9092
# actuator (sdk metrics)
management:
  endpoints:
    web:
      exposure:
        include: prometheus
# specific for samples
samples:
  data:
    language: english
  message:
    topic:
      name: samples-topic
    group:
      name: samples-group
